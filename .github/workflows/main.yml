
name: CI

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

permissions:
  contents: read

jobs:
  CI:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

      # Install python 3.11
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    
      # Install VENV
    - name: Install Python Virtual ENV
      run: pip3 install virtualenv
      # Set env if does not exist yet
    - name: Set up virtual ENV
      uses: actions/cache@v2
      id: cache-env
      with:
        path: venv
        key: ${{runner.os}}-venv-${{hashFiles('**/requirements.txt')}}
        restore-keys: /
          ${{runner.os}}
    
      # Build a Virtual ENV, but only if it doesn't already exist
    - name: Activate Virtual ENV
      run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt
      if: steps.cache-venv.outputs.cache-hit != 'true'
   
    #TODO: Integrate unit tests
    # - name: Run Tests   
    #   # Note that you have to activate the virtualenv in every step
    #   # because GitHub actions doesn't preserve the environment   
    #   run: . venv/bin/activate && pytest
    - name: Create archive of dependencies
      run: |
        cd ./venv/lib/python3.11/site-packages
        zip -r9 ../../../../api.zip .
    - name: Add API files to Zip file
      run: cd ./api && zip -g ../api.zip -r .
    - name: Upload zip file artifact
      uses: actions/upload-artifact@v2
      with:
        name: api
        path: api.zip

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
